openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /reviews/{movieId}/reviews/{reviewId}:
    put:
      tags:
      - review-controller
      operationId: updateMovieReview
      parameters:
      - name: movieId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: reviewId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReviewDto'
    delete:
      tags:
      - review-controller
      operationId: deleteMovieReview
      parameters:
      - name: movieId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: reviewId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /movies/{id}:
    get:
      tags:
      - movie-controller
      operationId: getMovie
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MovieDto'
    put:
      tags:
      - movie-controller
      operationId: updateMovie
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovieDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MovieDto'
    delete:
      tags:
      - movie-controller
      operationId: deleteMovie
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /reviews/{id}/reviews:
    post:
      tags:
      - review-controller
      operationId: createMovieReview
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReviewDto'
  /movies:
    get:
      tags:
      - movie-controller
      operationId: getMovies
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MovieDto'
    post:
      tags:
      - movie-controller
      operationId: createNewMovie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovieDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MovieDto'
  /reviews:
    get:
      tags:
      - review-controller
      operationId: getReviews
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReviewDto'
  /reviews/reviews/{id}:
    get:
      tags:
      - review-controller
      operationId: getReview
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReviewDto'
  /movies/search:
    get:
      tags:
      - movie-controller
      operationId: searchMovie
      parameters:
      - name: movieName
        in: query
        required: false
        schema:
          type: string
      - name: description
        in: query
        required: false
        schema:
          type: string
      - name: timeCreated
        in: query
        required: false
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MovieDto'
components:
  schemas:
    ReviewDto:
      required:
      - reviewContent
      - reviewTitle
      type: object
      properties:
        id:
          type: integer
          format: int64
        reviewerName:
          type: string
        reviewTitle:
          type: string
        reviewContent:
          type: string
    MovieDto:
      required:
      - description
      - movieName
      type: object
      properties:
        id:
          type: integer
          format: int64
        movieName:
          type: string
        description:
          type: string
        timeCreated:
          type: string
          format: date-time
        movieReviews:
          type: array
          items:
            $ref: '#/components/schemas/ReviewDto'
